================================================================================
Specifications
================================================================================

:supervised by: Morgan Magnin

.. contents::

Context
================================================================================

# TODO

Work grading
================================================================================

Objectives
--------------------------------------------------------------------------------

The project consists of studying how to extend Markus to deploy it at Centrale
Nantes (technical needs for installations, missing functionnalities, etc). It
involves identifying the functionnalities we need to develop so that Markus
answers the needs CS teachers have at ECN. This project also involves
interactions with the canadian development team. Some functionnalitues see
necessary :

- Group management: the groups should be formed of two to three students of the
  same section ;
- Deadlines :  Each section needs to be associated with one specific deadline.
  Moreover, we need to make appear the differences between the work that has
  been submitted before the deadline and after ;
- Marks should be displayed in comments and not percentage ;
- The students should be able to see the name of the grader ;
- Possibility of deploying metrics to check the students code isn't a savage
  copy/paste ;
- When exporting the students code, create repository with the name of the
  students that has done the work, instead of the name of the group ;


Detailed specifications
--------------------------------------------------------------------------------

- **Group management : the groups should be formed of two or three students of the
  same section ;**

    - instructors need to be able to add the students section through the web
      interface or via the CSV file upload.
    - the student list should have filter to sort students per section.
    - instructors should be able to switch from two modes, in the assignment
      property tab:

	- groups have to be formed with students from the same section.
	- groups **DO NOT** have to be formed with students from the same section.
    - when switching to this mode, the application should display a warning
      message if some of the students don't have a section associated to them.
    - students should see whether the groups have to be formed of students in
      the same section or not.
    - when the mode is activated, inviters should not be able to invited
      students in another section than theirs.


- **Deadlines :  Each section needs to be associated with one specific
  deadline ;** 

    - this functionnality can be enabled only if groups are limited to
      same-section students.
    - when enable, instructors can specify one deadline per section in the
      assignment property view.

- **We need to make appear the differences betrween the work
  that has been submitter before this deadline, and after ;**

    - In order to check the students has actually work before the deadline
      (specially in case of lab work), instructors should be able to view a diff
      between the version before the deadline and the last version submitted.

- **Marks should be displayed in comments, and not percentage ;**

    - Instructor should be able to switch between two modes: dispkay marks or
      display comments.
    - When displaying comments, the application will display one of the
      following comment:

	- Very good
	- Good
	- Average
	- Not Good at all :-(
    
- **The students should be able to see the name of the grader ;**

    - Instructors should be able to enable this mode through the web interface.
    - When this mode is enabled, students should be able to see the name of the
      grader(s) that have marked their code.
    - *We maybe need to think about the case where the profs are the one grading
      the students: in this case, as they have admin access, they do not need to
      be mapped to the group, and their ID are not saved in the database. It
      might mean that they have access to two accounts, or that we enable a
      mapping between admins and groups in addition of the TA's mapping.*

- **Possibility of deploying metrics to check the students code isn't a savage
  copy/paste ;**

    - Study of the feasibility of implementing this functionnality

	- algorithme
	- UI

- **When exporting the students code, create repository with the name of the
  students that has done this work, instead of the name of the group.**

    - This is a functionnality that Severin is currently working on. 

Deliverables
--------------------------------------------------------------------------------

- Final report
- Bimonthly blogpost
- Code (throught Markus's main SVN repo)

Criteria of acceptability
--------------------------------------------------------------------------------

- The code needs to tested and documented.
- Demonstrations and screencasts
- The work load should be of 60 hours per student.

Project management
================================================================================

Week 0
--------------------------------------------------------------------------------

- Setup accounts 
- Installed Markus on Christian's computer


Week 1
--------------------------------------------------------------------------------

- Detailed specifications
- Added column "section" to users table for student - Waiting for review (1 ship
  it - Karen asked for the change of term classgroup to section)
- Adding sections to students through the web interface (bulk action) - Waiting
  for Review
- Table sorts per section - Waiting for Review

Week 2
--------------------------------------------------------------------------------

- Added section table to the database

    - id
    - name
    - deadline
- corrected the adding sections to students through the web interface
- Added a CSV file upload to sort students through a section

